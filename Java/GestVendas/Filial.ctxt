#BlueJ class context
comment0.target=Filial
comment0.text=\r\n\ Classe\ Filial\ que\ cont\u00E9m\ estruturas\ com\ dados\ de\ uma\ filial\r\n
comment1.params=
comment1.target=Filial()
comment1.text=\ \r\n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Filial\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment11.params=p\ c\ uni\ mes
comment11.target=void\ updateRegProd(Produto,\ Cliente,\ int,\ int)
comment12.params=c\ p\ uni\ t\ mes
comment12.target=void\ updateRegCl(Cliente,\ Produto,\ int,\ double,\ int)
comment13.params=v
comment13.target=void\ addVenda(Venda)
comment2.params=regProd\ regCl
comment2.target=Filial(java.util.Map,\ java.util.Map)
comment2.text=\ \r\n\ Construtor\ que\ cria\ uma\ nova\ Filial\ a\ partir\ dos\ par\u00E2metros\ dados\ \ \r\n
comment3.params=f
comment3.target=Filial(Filial)
comment3.text=\ \r\n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Filial\r\n
comment4.params=
comment4.target=java.util.Map\ getRegProd()
comment4.text=\r\n\ M\u00E9todo\ que\ devolve\ \r\n\ @returns\ \r\n
comment5.params=
comment5.target=java.util.Map\ getRegCl()
comment5.text=\r\n\ M\u00E9todo\ que\ devolve\ \r\n\ @returns\ \r\n
comment6.params=regP
comment6.target=void\ setRegProd(java.util.Map)
comment6.text=\r\n\ M\u00E9todo\ que\ define\ \r\n\ @param\ \r\n
comment7.params=regC
comment7.target=void\ setRegCl(java.util.Map)
comment7.text=\r\n\ M\u00E9todo\ que\ define\ \r\n\ @param\ \r\n
comment8.params=o
comment8.target=boolean\ equals(java.lang.Object)
comment9.params=
comment9.target=Filial\ clone()
numComments=14
