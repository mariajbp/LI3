#BlueJ class context
comment0.target=Filial
comment0.text=\n\ Classe\ Filial\ que\ cont\u00E9m\ estruturas\ com\ dados\ de\ uma\ filial\n
comment1.params=
comment1.target=Filial()
comment1.text=\ \ \n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Filial\n
comment10.params=p
comment10.target=void\ getProdutos(java.util.Set)
comment10.text=\n\ M\u00E9todo\ que\ preenche\ um\ conjunto\ de\ produtos\ \n\ @param\ \ \ Conjunto\ a\ preencher\n
comment11.params=c
comment11.target=void\ getClientes(java.util.Set)
comment11.text=\n\ M\u00E9todo\ que\ preenche\ um\ conjunto\ de\ Clientes\n\ @param\ \ Conjunto\ a\ preencher\n
comment12.params=
comment12.target=java.util.List\ getClientesFaturacao()
comment12.text=\n\ M\u00E9todo\ que\ preenche\ uma\ lista\ de\ clientes\ e\ o\ seu\ total\ faturado\ anualmente\n\ @returns\ \ Lista\ de\ clientes\ e\ o\ seu\ total\ faturado\ anualmente\n
comment13.params=p\ mes
comment13.target=int\ getUnidadesMes(Produto,\ int)
comment13.text=\n\ M\u00E9todo\ que\ calcula\ as\ unidades\ vendidas\ mensalmente\ de\ um\ produto\n\ @param\ \ \ Produto\ em\ quest\u00E3o\n\ @param\ \ \ Total\ de\ unidades\ vendidas\n
comment14.params=p\ mes
comment14.target=double\ getFtrMensal(Produto,\ int)
comment14.text=\n\ M\u00E9todo\ que\ calcula\ a\ fatura\u00E7\u00E3o\ de\ um\ produto\ num\ determinado\ m\u00EAs\n\ @param\ \ \ Produto\ em\ quest\u00E3o\n\ @param\ \ \ Fatura\u00E7\u00E3o\ mensal\n
comment15.params=p\ mes
comment15.target=int\ getClientesDistintos(Produto,\ int)
comment15.text=\n\ M\u00E9todo\ que\ calcula\ o\ n\u00FAmero\ de\ clientes\ distintos\ que\ adquiriram\ determinado\ produto\ mensalmente\n\ @param\ \ \ \ \ Produto\ comprado\n\ @param\ \ \ \ \ M\u00EAs\ da\ compra\n\ @returns\ \ \ N\u00FAmero\ de\ clientes\ distintos\ que\ adquiriram\ o\ produto\n
comment16.params=mes
comment16.target=int\ getClientesDistintosTotal(int)
comment16.text=\n\ M\u00E9todo\ que\ calcula\ o\ n\u00FAmero\ de\ clientes\ que\ efetuaram\ compras\ na\ filial,\ num\ determinado\ m\u00EAs\ (query\ 2)\n\ @param\ \ \ M\u00EAs\ em\ quest\u00E3o\n\ @param\ \ \ Total\ de\ clientes\ que\ efetuaram\ compras\n
comment17.params=mes\ cl
comment17.target=void\ getClientesDistintosMes(int,\ java.util.Set)
comment17.text=\n\ M\u00E9todo\ que\ preenche\ um\ conjunto\ com\ clientes\ distintos\ de\ um\ certo\ mes\n\ @param\ \ \ M\u00EAs\ em\ quest\u00E3o\n\ @param\ \ \ Conjunto\ de\ clientes\n
comment18.params=mes
comment18.target=int\ totalVendas(int)
comment18.text=\n\ M\u00E9todo\ que\ calcula\ o\ total\ de\ vendas\ mensal\n\ @param\ \ \ M\u00EAs\ em\ quest\u00E3o\n\ @param\ \ \ Total\ de\ vendas\n
comment19.params=p\ c\ mes\ f\ uni
comment19.target=void\ updateRegProd(Produto,\ Cliente,\ int,\ double,\ int)
comment19.text=\n\ M\u00E9todo\ que\ atualiza\ o\ registo\ de\ um\ produto\n\ @param\ \ \ Produto\ comprado\n\ @param\ \ \ Cliente\ que\ efetuou\ a\ compra\n\ @param\ \ \ M\u00EAs\ da\ compra\n\ @param\ \ \ Total\ faturado\n\ @param\ \ \ Unidades\ compradas\n
comment2.params=regProd\ regCl
comment2.target=Filial(java.util.Map,\ java.util.Map)
comment2.text=\ \n\ Construtor\ que\ cria\ uma\ nova\ Filial\ a\ partir\ dos\ par\u00E2metros\ dados\ \ \n
comment20.params=c\ p\ uni\ t\ mes
comment20.target=void\ updateRegCl(Cliente,\ Produto,\ int,\ double,\ int)
comment20.text=\n\ M\u00E9todo\ que\ atualiza\ o\ registo\ de\ um\ cliente\n\ @param\ \ \ Produto\ comprado\n\ @param\ \ \ Cliente\ que\ efetuou\ a\ compra\n\ @param\ \ \ N\u00FAmero\ de\ unidades\ adquiridas\n\ @param\ \ \ Total\ gasto\n\ @param\ \ \ M\u00EAs\ da\ compra\n
comment21.params=v
comment21.target=void\ addVenda(Venda)
comment21.text=\n\ M\u00E9todo\ que\ divide\ as\ carateristicas\ de\ uma\ venda\ pelos\ Maps\ da\ classe\n
comment22.params=c\ mes
comment22.target=Pair\ comprasTotais(Cliente,\ int)
comment22.text=\n\ M\u00E9todo\ que\ calcula\ o\ numero\ de\ compras\ totais\ e\ o\ total\ gasto\ por\ um\ cliente\ num\ m\u00EAs\n\ @param\ \ \ \ \ Cliente\ em\ quest\u00E3o\n\ @param\ \ \ \ \ M\u00EAs\ a\ calcular\n\ @returns\ \ \ Numero\ de\ compras\ totais\ e\ o\ total\ gasto\ por\ um\ cliente\ num\ m\u00EAs\ \ \ \n
comment23.params=s\ mes\ c
comment23.target=void\ ProdutosDistintos(java.util.Set,\ int,\ Cliente)
comment23.text=\n\ M\u00E9todo\ que\ dado\ um\ cliente\ preenche\ um\ conjunto\ que\ cont\u00E9m\ produtos\ distintos\ comprados\ nesse\ m\u00EAs\n\ @param\ \ \ Conjunto\ de\ Produtos\n\ @param\ \ \ M\u00EAs\n\ @param\ \ \ Cliente\n
comment24.params=s
comment24.target=void\ getProdUnidades(java.util.Map)
comment24.text=\n\ M\u00E9todo\ que\ preenche\ um\ Map\ de\ pares\ com\ as\ informa\u00E7\u00F5es\ de\ um\ Produto\ e\ as\ unidades\ vendidas\ anualmente\ \n\ @param\ \ \ \ Map\ que\ associa\ a\ um\ Produto\ as\ unidades\ vendidas\ anuais\n
comment25.params=m
comment25.target=void\ getClientesProdutosDistintos(java.util.Map)
comment25.text=\n\ M\u00E9todo\ que\ preenche\ um\ Map\ com\ as\ informa\u00E7\u00F5es\ de\ um\ cliente\ e\ todos\ os\ Produtos\ comprados\ anualmente\ por\ este\n\ @param\ \ \ \ Map\ que\ associa\ a\ um\ Cliente\ um\ conjunto\ de\ Produtos\ comprados\n
comment26.params=p\ s
comment26.target=void\ getClientes(Produto,\ java.util.Set)
comment26.text=\n\ Preenche\ um\ conjunto\ com\ todos\ os\ clientes\ que\ compraram\ um\ produto\n\ @param\ \ \ \ Produto\ comprado\n\ @param\ \ \ \ Conjunto\ de\ clientes\ \n
comment27.params=c
comment27.target=Pair\ clienteGastoAnual(Cliente)
comment27.text=\n\ M\u00E9todo\ que\ calcula\ o\ gasto\ anual\ de\ um\ cliente\n\ @param\ \ \ \ \ Cliente\ em\ quest\u00E3o\ \n\ @returns\ \ \ Gasto\ anual\ de\ um\ cliente\n
comment28.params=c
comment28.target=Pair\ clienteUnidadesAnual(Cliente)
comment28.text=\n\ M\u00E9todo\ que\ calcula\ a\ quantidade\ de\ unidades\ compradas\ por\ um\ cliente,\ anualmente\n\ @param\ \ \ \ \ Cliente\ em\ quest\u00E3o\ \n\ @returns\ \ \ Quantidade\ de\ unidades\ compradas\ por\ um\ cliente,\ anualmente\n
comment29.params=c\ s
comment29.target=void\ numCompradoProds(Cliente,\ java.util.Map)
comment29.text=\n\ M\u00E9todo\ que\ preenche\ um\ Map\ com\ as\ informa\u00E7\u00F5es\ associadas\ a\ um\ Cliente\ sobre\ os\ Produtos\ que\ comprou\ e\ o\ n\u00FAmero\ de\ unidades\ \n\ @param\ \ \ Cliente\n\ @param\ \ \ Map\ que\ associa\ a\ cada\ produto\ as\ unidades\ compradas\n
comment3.params=f
comment3.target=Filial(Filial)
comment3.text=\ \n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Filial\n
comment30.params=p
comment30.target=java.util.List\ totalFtrProd(Produto)
comment30.text=\n\ M\u00E9todo\ que\ dado\ um\ produto,\ retorna\ \ lista\ com\ o\ seu\ total\ faturado\ por\ m\u00EAs\ \n\ @param\ \ \ Produto\ a\ determinar\n\ @param\ \ \ Lista\ com\ o\ total\ faturado\ por\ m\u00EAs\n
comment4.params=
comment4.target=java.util.Map\ getRegProd()
comment4.text=\n\ M\u00E9todo\ que\ associa\ um\ registo\ a\ um\ produto\n
comment5.params=
comment5.target=java.util.Map\ getRegCl()
comment5.text=\n\ M\u00E9todo\ que\ associa\ um\ registo\ a\ um\ cliente\ \n
comment6.params=regP
comment6.target=void\ setRegProd(java.util.Map)
comment6.text=\n\ M\u00E9todo\ que\ define\ um\ registo\ de\ determinado\ produto\n
comment7.params=regC
comment7.target=void\ setRegCl(java.util.Map)
comment7.text=\n\ M\u00E9todo\ que\ define\ um\ registo\ de\ determinado\ cliente\n
comment8.params=o
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\ \n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\n\ @return\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\n
comment9.params=
comment9.target=Filial\ clone()
comment9.text=\ \n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ uma\ identifica\u00E7\u00E3o\ de\ uma\ Fatura\u00E7\u00E3o\n
numComments=31
