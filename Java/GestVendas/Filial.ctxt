#BlueJ class context
comment0.target=Filial
comment0.text=\r\n\ Classe\ Filial\ que\ cont\u00E9m\ estruturas\ com\ dados\ de\ uma\ filial\r\n
comment1.params=
comment1.target=Filial()
comment1.text=\ \r\n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Filial\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ M\u00E9todo\ que\ converte\ uma\ identifica\u00E7\u00E3o\ numa\ string\ \r\n
comment11.params=p\ mes
comment11.target=int\ getClientesDistintos(Produto,\ int)
comment11.text=\r\n\ M\u00E9todo\ que\ devolve\ os\ clientes\ distintos\ de\ determinado\ produto,\ num\ mes\r\n\ @param\ \ \ Produto\ comprado\r\n\ @param\ \ \ M\u00EAs\ da\ compra\r\n
comment12.params=mes
comment12.target=int\ totalVendas(int)
comment13.params=p\ c\ mes
comment13.target=void\ updateRegProd(Produto,\ Cliente,\ int)
comment13.text=\r\n\ M\u00E9todo\ que\ atualiza\ o\ registo\ de\ um\ produto\r\n\ @param\ \ \ Produto\ comprado\r\n\ @param\ \ \ Cliente\ que\ efetuou\ a\ compra\r\n\ @param\ \ \ M\u00EAs\ da\ compra\r\n
comment14.params=c\ p\ uni\ t\ mes
comment14.target=void\ updateRegCl(Cliente,\ Produto,\ int,\ double,\ int)
comment14.text=\r\n\ M\u00E9todo\ que\ atualiza\ o\ registo\ de\ um\ cliente\r\n\ @param\ \ \ Produto\ comprado\r\n\ @param\ \ \ Cliente\ que\ efetuou\ a\ compra\r\n\ @param\ \ \ N\u00FAmero\ de\ unidades\ adquiridas\r\n\ @param\ \ \ ???\r\n\ @param\ \ \ M\u00EAs\ da\ compra\r\n
comment15.params=v
comment15.target=void\ addVenda(Venda)
comment15.text=\r\n\ M\u00E9todo\ que\ divide\ as\ carateristicas\ de\ uma\ venda\ pelos\ Maps\ da\ classe\r\n
comment16.params=
comment16.target=java.util.HashMap\ comprasAnuais()
comment2.params=regProd\ regCl
comment2.target=Filial(java.util.Map,\ java.util.Map)
comment2.text=\ \r\n\ Construtor\ que\ cria\ uma\ nova\ Filial\ a\ partir\ dos\ par\u00E2metros\ dados\ \ \r\n
comment3.params=f
comment3.target=Filial(Filial)
comment3.text=\ \r\n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Filial\r\n
comment4.params=
comment4.target=java.util.Map\ getRegProd()
comment4.text=\r\n\ M\u00E9todo\ que\ associa\ um\ registo\ a\ um\ produto\r\n
comment5.params=
comment5.target=java.util.Map\ getRegCl()
comment5.text=\r\n\ M\u00E9todo\ que\ associa\ um\ registo\ a\ um\ cliente\ \r\n
comment6.params=regP
comment6.target=void\ setRegProd(java.util.Map)
comment6.text=\r\n\ M\u00E9todo\ que\ define\ um\ registo\ de\ determinado\ produto\r\n
comment7.params=regC
comment7.target=void\ setRegCl(java.util.Map)
comment7.text=\r\n\ M\u00E9todo\ que\ define\ um\ registo\ de\ determinado\ cliente\r\n
comment8.params=o
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\ \r\n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\r\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\r\n\ @return\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\r\n
comment9.params=
comment9.target=Filial\ clone()
comment9.text=\ \r\n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ uma\ identifica\u00E7\u00E3o\ de\ uma\ Fatura\u00E7\u00E3o\r\n
numComments=17
