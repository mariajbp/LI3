#BlueJ class context
comment0.target=Filial
comment0.text=\n\ Classe\ Filial\ que\ cont\u00E9m\ estruturas\ com\ dados\ de\ uma\ filial\n
comment1.params=
comment1.target=Filial()
comment1.text=\ \n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Filial\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ M\u00E9todo\ que\ converte\ uma\ identifica\u00E7\u00E3o\ numa\ string\ \n
comment11.params=p
comment11.target=void\ getProdutos(java.util.Set)
comment12.params=
comment12.target=java.util.List\ getClientesFaturacao()
comment13.params=
comment13.target=java.util.List\ getProdUnidades()
comment14.params=
comment14.target=java.util.Set\ getProdutos()
comment15.params=p
comment15.target=int\ getUnidadesAnual(Produto)
comment16.params=p\ mes
comment16.target=int\ getUnidadesMes(Produto,\ int)
comment17.params=p\ mes
comment17.target=double\ getFtrMensal(Produto,\ int)
comment18.params=p\ mes
comment18.target=int\ getClientesDistintos(Produto,\ int)
comment18.text=\n\ M\u00E9todo\ que\ devolve\ os\ clientes\ distintos\ de\ determinado\ produto,\ num\ mes\n\ @param\ \ \ Produto\ comprado\n\ @param\ \ \ M\u00EAs\ da\ compra\n
comment19.params=mes
comment19.target=int\ totalVendas(int)
comment2.params=regProd\ regCl
comment2.target=Filial(java.util.Map,\ java.util.Map)
comment2.text=\ \n\ Construtor\ que\ cria\ uma\ nova\ Filial\ a\ partir\ dos\ par\u00E2metros\ dados\ \ \n
comment20.params=p\ c\ mes\ f\ uni
comment20.target=void\ updateRegProd(Produto,\ Cliente,\ int,\ double,\ int)
comment20.text=\n\ M\u00E9todo\ que\ atualiza\ o\ registo\ de\ um\ produto\n\ @param\ \ \ Produto\ comprado\n\ @param\ \ \ Cliente\ que\ efetuou\ a\ compra\n\ @param\ \ \ M\u00EAs\ da\ compra\n
comment21.params=c\ p\ uni\ t\ mes
comment21.target=void\ updateRegCl(Cliente,\ Produto,\ int,\ double,\ int)
comment21.text=\n\ M\u00E9todo\ que\ atualiza\ o\ registo\ de\ um\ cliente\n\ @param\ \ \ Produto\ comprado\n\ @param\ \ \ Cliente\ que\ efetuou\ a\ compra\n\ @param\ \ \ N\u00FAmero\ de\ unidades\ adquiridas\n\ @param\ \ \ ???\n\ @param\ \ \ M\u00EAs\ da\ compra\n
comment22.params=v
comment22.target=void\ addVenda(Venda)
comment22.text=\n\ M\u00E9todo\ que\ divide\ as\ carateristicas\ de\ uma\ venda\ pelos\ Maps\ da\ classe\n
comment23.params=
comment23.target=java.util.HashMap\ comprasAnuais()
comment24.params=c\ mes
comment24.target=Pair\ comprasTotais(Cliente,\ int)
comment24.text=\n\ \ \ \ public\ int\ distintosProd(Produto\ produto)\n\ \ \ \ {\n\ \ \ \ \ \ \ \ int\ d\ \=\ 0;\n\ \ \ \ \ \ \ \ for(Map.Entry<Produto,\ List<RegistoProduto>>\ e\ \:\ regProd.entrySet())\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(produto\ \=\=\ e.getKey())\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ List<RegistoProduto>\ reg\ \=\ e.getValue();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ d\ \=\ reg.size();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\ \ \ \n\ \ \ \ \ \ \ \ return\ d;\n}
comment25.params=c
comment25.target=Pair\ comprasTotaisAnual(Cliente)
comment26.params=c\ mes
comment26.target=int\ ProdutosDistintos(Cliente,\ int)
comment27.params=s\ mes\ c
comment27.target=void\ ProdutosDistintos(java.util.Set,\ int,\ Cliente)
comment28.params=p
comment28.target=int\ clDistintos(Produto)
comment29.params=c
comment29.target=java.util.Set\ comprasDistintasClientes(Cliente)
comment3.params=f
comment3.target=Filial(Filial)
comment3.text=\ \n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Filial\n
comment30.params=p
comment30.target=java.util.Set\ getClientes(Produto)
comment31.params=c
comment31.target=Pair\ clienteGastoAnual(Cliente)
comment32.params=c
comment32.target=Pair\ clienteUnidadesAnual(Cliente)
comment4.params=
comment4.target=java.util.Map\ getRegProd()
comment4.text=\n\ M\u00E9todo\ que\ associa\ um\ registo\ a\ um\ produto\n
comment5.params=
comment5.target=java.util.Map\ getRegCl()
comment5.text=\n\ M\u00E9todo\ que\ associa\ um\ registo\ a\ um\ cliente\ \n
comment6.params=regP
comment6.target=void\ setRegProd(java.util.Map)
comment6.text=\n\ M\u00E9todo\ que\ define\ um\ registo\ de\ determinado\ produto\n
comment7.params=regC
comment7.target=void\ setRegCl(java.util.Map)
comment7.text=\n\ M\u00E9todo\ que\ define\ um\ registo\ de\ determinado\ cliente\n
comment8.params=o
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\ \n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\n\ @return\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\n
comment9.params=
comment9.target=Filial\ clone()
comment9.text=\ \n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ uma\ identifica\u00E7\u00E3o\ de\ uma\ Fatura\u00E7\u00E3o\n
numComments=33
