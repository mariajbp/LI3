#BlueJ class context
comment0.target=Pair
comment1.params=
comment1.target=Pair()
comment1.text=\ \n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Pair\n
comment10.params=
comment10.target=boolean\ isEmpty()
comment10.text=\n\ M\u00E9todo\ que\ determina\ se\ um\ par\ est\u00E1\ vazio\n\ @returns\ True\ caso\ esteja\ vazio,\ False\ caso\ contr\u00E1rio\n
comment11.params=p
comment11.target=int\ compareTo(Pair)
comment11.text=\n\ M\u00E9todo\ que\ implementa\ um\ comparador\ de\ Pair\n\ @param\ Pair\ p\ \n
comment2.params=fst\ snd
comment2.target=Pair(java.lang.Comparable,\ java.lang.Comparable)
comment2.text=\ \n\ Construtor\ que\ cria\ um\ novo\ Pair\ a\ partir\ dos\ par\u00E2metros\ dados\ \ \n
comment3.params=
comment3.target=int\ hashCode()
comment3.text=\ \n\ M\u00E9todo\ que\ calcula\ o\ hashcode\ da\ classe\n
comment4.params=o
comment4.target=boolean\ equals(java.lang.Object)
comment4.text=\ \n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\n\ @returns\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\n\ M\u00E9todo\ que\ converte\ uma\ identifica\u00E7\u00E3o\ numa\ string\n
comment6.params=
comment6.target=java.lang.Comparable\ getFst()
comment6.text=\n\ M\u00E9todo\ que\ devolve\ o\ primeiro\ elemento\ do\ par\n\ @returns\ Primeiro\ elemento\ do\ par\n
comment7.params=fst
comment7.target=void\ setFst(java.lang.Comparable)
comment7.text=\n\ M\u00E9todo\ que\ define\ o\ primeiro\ elemento\ do\ par\n\ @param\ Primeiro\ elemento\ do\ par\n
comment8.params=
comment8.target=java.lang.Comparable\ getSnd()
comment8.text=\n\ M\u00E9todo\ que\ devolve\ o\ segundo\ elemento\ do\ par\n\ @returns\ Segundo\ elemento\ do\ par\n
comment9.params=snd
comment9.target=void\ setSnd(java.lang.Comparable)
comment9.text=\n\ M\u00E9todo\ que\ define\ o\ segundo\ elemento\ do\ par\n\ @returns\ Segundo\ elemento\ do\ par\n
numComments=12
