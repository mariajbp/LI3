#BlueJ class context
comment0.target=Produto
comment0.text=\n\ Representa\u00E7\u00E3o\ de\ um\ produto\n
comment1.params=
comment1.target=Produto()
comment1.text=\ \n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Produto\ \n
comment2.params=c
comment2.target=Produto(java.lang.String)
comment2.text=\ \n\ Construtor\ que\ cria\ um\ novo\ Produto\ a\ partir\ dos\ par\u00E2metros\ dados\ \ \n
comment3.params=p
comment3.target=Produto(Produto)
comment3.text=\ \n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ produto\ \n
comment4.params=
comment4.target=java.lang.String\ getCodigo()
comment4.text=\n\ M\u00E9todo\ que\ devolve\ o\ c\u00F3digo\ de\ um\ produto\n\ @returns\ C\u00F3digo\ de\ um\ produto\n
comment5.params=o
comment5.target=boolean\ equals(java.lang.Object)
comment5.text=\ \n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\n\ @returns\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\n
comment6.params=
comment6.target=Produto\ clone()
comment6.text=\ \n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ uma\ identifica\u00E7\u00E3o\ de\ um\ Produto\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\n\ M\u00E9todo\ que\ converte\ uma\ identifica\u00E7\u00E3o\ numa\ string\n\ @returns\ \n
comment8.params=p
comment8.target=int\ compareTo(Produto)
comment8.text=\n\ M\u00E9todo\ que\ implementa\ um\ comparador\ de\ Produto\ alfabeticamente\n\ @param\ Produto\ a\ comparar\n
numComments=9
