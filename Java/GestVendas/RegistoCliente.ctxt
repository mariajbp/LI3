#BlueJ class context
comment0.target=RegistoCliente
comment0.text=\n\ Classe\ RegistoCliente\ que\ cont\u00E9m\ estruturas\ com\ dados\ de\ de\ um\ registo\n
comment1.params=
comment1.target=RegistoCliente()
comment1.text=\ \n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ CatalogoCliente\n
comment10.params=u
comment10.target=void\ setUnidades(int)
comment10.text=\n\ M\u00E9todo\ que\ define\ o\ n\u00FAmero\ de\ unidades\ compradas,\ nesse\ m\u00EAs\n\ @param\ \ \ N\u00FAmero\ de\ unidades\ compradas,\ nesse\ m\u00EAs\n
comment11.params=t
comment11.target=void\ setTotal(double)
comment11.text=\n\ M\u00E9todo\ que\ define\ o\ total\ gasto\ pelo\ cliente\ nesse\ m\u00EAs\n\ @return\ \ \ Total\ gasto\ pelo\ cliente\ nesse\ m\u00EAs\n
comment12.params=
comment12.target=RegistoCliente\ clone()
comment12.text=\ \n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ uma\ identifica\u00E7\u00E3o\ de\ um\ RegistoCliente\n
comment13.params=o
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\ \n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\n\ @return\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\n\ M\u00E9todo\ que\ converte\ uma\ identifica\u00E7\u00E3o\ numa\ string\ \n
comment15.params=v
comment15.target=void\ updateVezes(int)
comment15.text=\n\ M\u00E9todo\ que\ atualiza\ o\ n\u00FAmero\ de\ compras\ efetuadas\ por\ m\u00EAs\n\ @param\ \ \ Novo\ n\u00FAmero\ de\ compras\ efetuadas\n
comment16.params=u
comment16.target=void\ updateUnidades(int)
comment16.text=\n\ M\u00E9todo\ que\ atualiza\ o\ n\u00FAmero\ de\ unidades\ compradas\ nesse\ m\u00EAs\n\ @param\ \ \ \ Novo\ n\u00FAmero\ de\ unidades\ compradas,\ nesse\ m\u00EAs\n
comment17.params=tg
comment17.target=void\ updateTotalGasto(double)
comment17.text=\n\ M\u00E9todo\ que\ atualiza\ o\ total\ gasto\ nesse\ m\u00EAs\n\ @param\ \ \ \ Novo\ total\ gasto\ nesse\ m\u00EAs\n
comment18.params=p
comment18.target=void\ addProduto(Pair)
comment18.text=\ \n\ M\u00E9todo\ que\ dado\ um\ par\ Produto/Gasto\ compradas\ verifica\ se\ o\ Produto\ j\u00E1\ existe\ e\ faz\ o\ seu\ Registo\ atualizando\ o\ valor\ total\ gasto\ nesse\ produto.\n\ @param\ Par<Cliente,\ Integer>\n
comment2.params=vezes\ prod\ unidades\ total
comment2.target=RegistoCliente(int,\ java.util.TreeSet,\ int,\ double)
comment2.text=\ \n\ Construtor\ que\ cria\ um\ novo\ RegistoCliente\ a\ partir\ dos\ par\u00E2metros\ dados\ \n
comment3.params=rc
comment3.target=RegistoCliente(RegistoCliente)
comment3.text=\ \n\ Construtor\ de\ c\u00F3pia\ que\ cria\ uma\ nova\ inst\u00E2ncia\ CatalogoCliente\ a\ partir\ de\ uma\ CatalogoCliente\ passado\ como\ par\u00E2metro\ \n
comment4.params=
comment4.target=int\ getVezes()
comment4.text=\n\ M\u00E9todo\ que\ devolve\ o\ n\u00FAmero\ de\ compras\ efetuadas\ por\ m\u00EAs\n\ @return\ \ \ N\u00FAmero\ de\ compras\ efetuadas\ por\ m\u00EAs\n
comment5.params=
comment5.target=java.util.TreeSet\ getProd()
comment5.text=\n\ M\u00E9todo\ que\ devolve\ pares\ de\ produtos\ e\ dinheiro\ gasto\ no\ mesmo,\ por\ m\u00EAs\n\ @return\ \ \ Pares\ de\ produtos\ e\ dinheiro\ gasto\ no\ mesmo,\ por\ m\u00EAs\n
comment6.params=
comment6.target=int\ getUnidades()
comment6.text=\n\ M\u00E9todo\ que\ devolve\ o\ n\u00FAmero\ de\ unidades\ compradas,\ nesse\ m\u00EAs\n\ @return\ \ \ N\u00FAmero\ de\ unidades\ compradas,\ nesse\ m\u00EAs\n
comment7.params=
comment7.target=double\ getTotal()
comment7.text=\n\ M\u00E9todo\ que\ devolve\ o\ total\ gasto\ pelo\ cliente\ nesse\ m\u00EAs\n\ @return\ \ \ \ Total\ gasto\ pelo\ cliente\ nesse\ m\u00EAs\n
comment8.params=v
comment8.target=void\ setVezes(int)
comment8.text=\n\ M\u00E9todo\ que\ define\ \ o\ n\u00FAmero\ de\ compras\ efetuadas\ por\ m\u00EAs\n\ @param\ \ \ N\u00FAmero\ de\ compras\ efetuadas\ por\ m\u00EAs\ \ \n
comment9.params=t
comment9.target=void\ setProd(java.util.TreeSet)
comment9.text=\n\ M\u00E9todo\ que\ define\ pares\ de\ produtos\ e\ dinheiro\ gasto\ no\ mesmo,\ por\ m\u00EAs\n\ @param\ Pares\ de\ produtos\ e\ dinheiro\ gasto\ no\ mesmo,\ por\ m\u00EAs\n
numComments=19
