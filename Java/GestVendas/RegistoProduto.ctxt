#BlueJ class context
comment0.target=RegistoProduto
comment0.text=\r\n\ Classe\ RegistoProduto\ que\ cont\u00E9m\ estruturas\ com\ dados\ de\ um\ registo\ de\ produtos\r\n
comment1.params=
comment1.target=RegistoProduto()
comment1.text=\ \r\n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ CatalogoProduto\r\n
comment10.params=o
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\r\n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\r\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\r\n\ @return\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\r\n
comment11.params=
comment11.target=RegistoProduto\ clone()
comment11.text=\ \r\n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ um\ Registo\ de\ Produtos\r\n\ @returns\ Registo\ de\ Produto\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment13.params=c\ uni\ f
comment13.target=void\ updateRegProduto(Cliente,\ int,\ double)
comment13.text=\ \r\n\ M\u00E9todo\ que\ dado\ um\ par\ Cliente/Unidades\ compradas\ verifica\ se\ o\ Cliente\ j\u00E1\ existe\ e\ faz\ o\ seu\ Registo\ atualizando\ as\ unidades.\r\n\ @param\ Par<Cliente,\ Integer>\r\n
comment14.params=f
comment14.target=void\ updateFat(double)
comment15.params=u
comment15.target=void\ updateUnidades(int)
comment16.params=
comment16.target=int\ ClientesDistintos()
comment2.params=s\ f\ u
comment2.target=RegistoProduto(java.util.Set,\ double,\ int)
comment2.text=\ \r\n\ Construtor\ que\ cria\ um\ novo\ RegistoProduto\ a\ partir\ dos\ par\u00E2metros\ dados\ \r\n
comment3.params=r
comment3.target=RegistoProduto(RegistoProduto)
comment3.text=\ \r\n\ Construtor\ de\ c\u00F3pia\ que\ cria\ uma\ nova\ inst\u00E2ncia\ RegistoProduto\ a\ partir\ de\ um\ RegistoProduto\ passado\ como\ par\u00E2metro\ \r\n
comment4.params=
comment4.target=java.util.Set\ getRegisto()
comment4.text=\r\n\ M\u00E9todo\ que\ devolve\ o\ registo\r\n\ @returns\ \ Set\ de\ Pares<Cliente,\ Integer>\r\n
comment5.params=
comment5.target=double\ getFaturado()
comment6.params=
comment6.target=int\ getUnidades()
comment7.params=s
comment7.target=void\ setRegisto(java.util.Set)
comment7.text=\r\n\ M\u00E9todo\ que\ faz\ set\ de\ um\ registo\r\n\ @param\ \ Set\ de\ Pares<Cliente,\ Integer>\r\n
comment8.params=f
comment8.target=void\ setFaturado(double)
comment9.params=u
comment9.target=void\ setUnidades(int)
numComments=17
